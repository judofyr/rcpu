#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.expand_path("../../lib", __FILE__))

require 'rcpu'
require 'rcpu/trollop'
T = RCPU::Trollop

p = T::Parser.new do
  version "RCPU #{RCPU::VERSION}"
  banner <<-EOS
DCPU-16 assembler, emulator, debugger

Usage:
  bin/rcpu examples/hello.rcpu
  bin/rcpu examples/hello.bin
  bin/rcpu examples/hello.s
  bin/rcpu -b examples/hello

Valid extensions:
  .rcpu - Ruby DSL assembler
  .s    - Notch-style assembler
  .bin  - Binary file

Available options:
EOS
  opt :binary, "Always treat the file as a binary"
end

formats = %w[bin rcpu]

opts = nil
T.with_standard_exception_handling(p) do
  opts = p.parse(ARGV)
  raise T::HelpNeeded unless opts[:filename] = ARGV.shift
  opts[:binary] ||= File.extname(opts[:filename]) == ".bin"
end

linker = RCPU::Linker.new
if opts[:binary]
  linker.extensions << [0x8000, RCPU::ScreenExtension, []]
  linker.compile_binary(File.binread(opts[:filename]))
else
  linker.compile(opts[:filename], Dir.pwd)
end

linker.debugger.start

