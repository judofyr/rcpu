#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.expand_path("../../lib", __FILE__))

if ARGV.empty?
  puts "usage: rcpu examples/from_spec.rpcu"
  exit 1
end

require 'rcpu'

begin
  require 'pry'
rescue LoadError
end

linker = RCPU::Linker.new
lib = linker.find(ARGV[0], Dir.pwd)
linker.compile(lib)
emu = RCPU::Emulator.new(linker.finalize)
emu.memory.add_extensions(linker.extensions)


running = false

trap(:INT) do
  running = false
end

def help
  puts "(^C) stop execution"
  puts "(b) add breakpoint"
  puts "(d) dump state"
  puts "(e) evaluate ruby"
  puts "(h) help"
  puts "(p) ruby shell" if binding.respond_to?(:pry)
  puts "(r) run"
  puts "(s) step"
  puts "(q) quit"
end

puts "Welcome to RCPU:"
help

breakpoints = []

while true
  begin
    pc, ins = emu.next_instruction
    puts "#{pc.to_s(16).rjust(4, '0')}: #{ins}"
    print "=> "
    input = $stdin.gets
    exit if input.nil?

    input.chomp!
    cmd = (input.slice!(0) || '').downcase
    input.strip!

    case cmd
    when "b"
      bp = Integer(input)
      breakpoints << bp
      puts "Added breakpoint #{breakpoints.size} at 0x#{bp.to_s(16)}"
    when "d"
      emu.dump
    when "e"
      emu.start
      puts ">> #{emu.instance_eval(input)}"
      emu.stop
    when "h"
      help
    when "p"
      emu.start
      emu.instance_eval { binding.pry }
      emu.stop
    when "r"
      running = true
      msg = ""
      emu.start

      while true
        pc, ins = emu.next_instruction
        if idx = breakpoints.index(pc)
          msg = "Breakpoint #{idx + 1} reached"
          break
        end

        emu.tick

        # Ctrl-C
        unless running
          msg = "Pausing"
          break
        end

        # Busy loop
        if pc == emu[:PC]
          msg = "Busy loop"
          break
        end

      end
      emu.stop
      puts msg

    when "s", ""
      emu.start
      input = 1 if input.empty?
      Integer(input).times do
        emu.tick
      end
      emu.stop
    when "q"
      exit
    else
      puts "Unknown command. Try 'h' for help."
    end
  rescue
    puts "#{$!.class}: #{$!}"
  end
end

